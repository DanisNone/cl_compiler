typedef uchar dt_float8_e3m4;
typedef float dt_float8_e3m4_work;


dt_float8_e3m4_work dt_normalize_input_float8_e3m4(dt_float8_e3m4 f) {
    bool is_neg = f >= 128;
    if (is_neg) f -= 128;

    float res;
    if (f < 32)
        res = f / 64.0f;
    else if (f < 48)
        res = f / 32.0f - 0.5f;
    else if (f < 64)
        res = f / 16.0f - 2.0f;
    else if (f < 80)
        res = f / 8.0f - 6.0f;
    else if (f < 96)
        res = f / 4.0f - 16.0f;
    else if (f < 112)
        res = f / 2.0f - 40.0f;
    else if (f == 112)
        res = as_float(0x7f800000); // inf
    else
        res = as_float(0x7fc00000); // nan
    return is_neg ? -res : res;
}


dt_float8_e3m4 dt_normalize_output_float8_e3m4(dt_float8_e3m4_work f) {
    float af = fabs(f);
    uchar result;

    if (af <= 0.5f)
        result = convert_uchar_rte(af * 64);
    else if (af <= 1.0f)
        result = convert_uchar_rte(af * 32) + 16;
    else if (af <= 2.0f)
        result = convert_uchar_rte(af * 16) + 32;
    else if (af <= 4.0f)
        result = convert_uchar_rte(af * 8) + 48;
    else if (af <= 8.0f)
        result = convert_uchar_rte(af * 4) + 64;
    else if (af <= 16.0f)
        result = convert_uchar_rte(af * 2) + 80;
    else if (af > 16.0f)
        result = 112; // inf
    else
        result = 113; // nan
    return result | (signbit(f) ? 0x80 : 0);
}